This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-29T03:59:12.455Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
app/
  globals.css
  layout.tsx
  page.tsx
components/
  ui/
    aurora-background.tsx
    button.tsx
    how-it-works.tsx
    infinite-moving-cards.tsx
  footer.tsx
  hero.tsx
  navbar.tsx
  testimonial.tsx
  who-is-it-for.tsx
  work-section.tsx
lib/
  utils.ts
public/
  socials/
    facebook.svg
    instagram.svg
    linkedin.svg
    mail-2.svg
    mail.svg
    x.svg
  arrow-2.svg
  file.svg
  globe.svg
  logo-horizontal.svg
  next.svg
  vercel.svg
  window.svg
.gitignore
eslint.config.mjs
next.config.ts
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --white: #ffffff;
  --black: #000000;
  --transparent: transparent;
  --background: #000212;
  --foreground: #ffffff;
  --primary: rgba(255, 255, 255, 0.1);
  --primary-hover: rgba(255, 255, 255, 0.2);
}

/* Optional smoothing and rendering hints */
html {
  -webkit-font-smoothing: antialiased; /* For WebKit-based browsers */
  -moz-osx-font-smoothing: grayscale;  /* For Firefox on macOS */
  text-rendering: optimizeLegibility;  /* Enhances legibility */
}

body {
  color: var(--foreground);
  background: radial-gradient(circle at center, #000C1A, #000212);
  font-family: Arial, Helvetica, sans-serif;
  overflow-x: hidden;
}

@layer components {
  .hero-button {
    @apply relative inline-flex items-center justify-center gap-2 px-6 py-3 text-sm font-medium tracking-wide text-white transition-all duration-300 rounded-full;
  }

  .hero-button-primary {
    @apply bg-gradient-to-r from-white/10 to-white/5 hover:from-white hover:to-gray-100 hover:text-gray-900 border border-white/10;
  }

  .hero-button-outline {
    @apply border border-white/10 bg-white/5 backdrop-blur-sm hover:bg-white/20;
  }
}

/* Add this to your existing globals.css file */
.footer-icon {
  filter: invert(1) brightness(0.6);
  transition: filter 0.3s ease;
}

.footer-icon:hover {
  filter: invert(1) brightness(1);
}

================
File: app/layout.tsx
================
// app/layout.tsx
import type { Metadata } from "next";
import { Inter, Instrument_Serif, Homemade_Apple } from 'next/font/google';
import { ReactLenis } from 'lenis/react';
import "./globals.css";

const inter = Inter({ 
  subsets: ["latin"], 
  variable: '--font-inter' 
});

const instrumentSerif = Instrument_Serif({ 
  subsets: ["latin"], 
  variable: '--font-instrument-serif',
  weight: '400' 
});

const homemadeApple = Homemade_Apple({ 
  weight: '400',
  subsets: ['latin'],
  variable: '--font-homemade-apple'
});

export const metadata: Metadata = {
  title: "Haloweave - AI Web Development Agency",
  description: "Web Designs to double conversions in just 14 days",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className={`${inter.variable} ${instrumentSerif.variable} ${homemadeApple.variable}`}>
      <body className="font-inter font-light bg-gray-950 text-white antialiased">
        <ReactLenis root options={{
          lerp: 0.1,
          smoothWheel: true,
          syncTouch: true,
        }}>
          {children}
        </ReactLenis>
      </body>
    </html>
  );
}

================
File: app/page.tsx
================
import { Hero } from "@/components/hero";
import { Navbar } from "@/components/navbar";
import { WorkSection } from "@/components/work-section";
import HowItWorks from "@/components/ui/how-it-works";
import { AuroraBackground } from "@/components/ui/aurora-background";
import TestimonialSection from "@/components/testimonial";
import WhoIsItFor from "@/components/who-is-it-for"
import Footer from "@/components/footer"

export default function Home() {
  return (
    <AuroraBackground>
      <main className="relative">
        <Navbar />
        <Hero />
        <WorkSection />
        <HowItWorks />
        <TestimonialSection />
        <WhoIsItFor/>
        <Footer />
      </main>
    </AuroraBackground>
  );
}

================
File: components/ui/aurora-background.tsx
================
"use client";
import { cn } from "@/lib/utils";
import React, { ReactNode } from "react";

interface AuroraBackgroundProps extends React.HTMLProps<HTMLDivElement> {
  children: ReactNode;
  showRadialGradient?: boolean;
}

export const AuroraBackground = ({
  className,
  children,
  showRadialGradient = true,
  ...props
}: AuroraBackgroundProps) => {
  return (
    <div
      className={cn(
        "relative flex min-h-screen flex-col bg-[#000212] text-white transition-bg",
        className
      )}
      {...props}
    >
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div
          className={cn(
            `[--white-gradient:repeating-linear-gradient(100deg,var(--white)_0%,var(--white)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--white)_16%)]
            [--dark-gradient:repeating-linear-gradient(100deg,var(--black)_0%,var(--black)_7%,var(--transparent)_10%,var(--transparent)_12%,var(--black)_16%)]
            [--aurora:repeating-linear-gradient(100deg,#000C1A_10%,#051f35_20%,#0A2744_30%,#0C3152_40%,#0E3B61_50%)]
            [background-image:var(--dark-gradient),var(--aurora)]
            [background-size:300%,_200%]
            [background-position:50%_50%,50%_50%]
            filter blur-[10px] invert dark:invert-0
            after:content-[""] after:fixed after:inset-0 
            after:[background-image:var(--dark-gradient),var(--aurora)]
            after:[background-size:200%,_100%] 
            after:animate-aurora after:[background-attachment:fixed] 
            after:mix-blend-difference
            absolute -inset-[10px] opacity-30`,
            showRadialGradient &&
              `[mask-image:radial-gradient(ellipse_at_100%_0%,black_10%,var(--transparent)_70%)]`
          )}
        />
      </div>
      {children}
    </div>
  );
};

================
File: components/ui/button.tsx
================
"use client";

import { cn } from "@/lib/utils";
import { motion, HTMLMotionProps } from "framer-motion";
import React from "react";

interface ButtonProps extends HTMLMotionProps<"button"> {
  variant?: "primary" | "outline";
  children: React.ReactNode;
}

export const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant = "primary", children, ...props }, ref) => {
    return (
      <motion.button
        ref={ref}
        whileHover={{ scale: 1.02 }}
        whileTap={{ scale: 0.98 }}
        className={cn(
          "hero-button",
          variant === "primary" ? "hero-button-primary" : "hero-button-outline",
          className
        )}
        {...props}
      >
        {children}
      </motion.button>
    );
  }
);

Button.displayName = "Button";

================
File: components/ui/how-it-works.tsx
================
"use client";

import { cn } from "@/lib/utils";
import { motion } from "framer-motion";

const steps = [
  {
    number: "01",
    title: "Discovery Call",
    description:
      "Schedule a complimentary strategy session where we'll dive deep into your vision and explore how our expertise can transform your digital presence.",
  },
  {
    number: "02",
    title: "Strategic Blueprint",
    description:
      "Receive a comprehensive prototype and detailed technical roadmap, carefully crafted to align with your business objectives and ensure crystal-clear execution.",
  },
  {
    number: "03",
    title: "Rapid Development",
    description:
      "Watch your vision come to life through our agile 4-week sprint process, with consistent updates and a production-ready solution that exceeds expectations.",
  },
];

const container = {
  hidden: { opacity: 0 },
  show: {
    opacity: 1,
    transition: {
      staggerChildren: 0.3,
      delayChildren: 0.3,
    },
  },
};

const item = {
  hidden: { opacity: 0, y: 20 },
  show: { opacity: 1, y: 0 },
};

interface ProcessCardProps {
  number: string;
  title: string;
  description: string;
  className?: string;
}

function ProcessCard({ number, title, description, className }: ProcessCardProps) {
  return (
    <motion.div
      variants={item}
      className={cn(
        "group relative w-full rounded-xl overflow-hidden",
        // ↓ Updated here from bg-black/20 to bg-black/10
        "backdrop-blur-sm",
        "border border-white/[0.03] hover:border-white/[0.08] transition-all duration-500",
        className
      )}
    >
      {/* Main container with noise pattern */}
      <div className="size-full bg-repeat bg-[length:500px_500px] bg-noise-pattern">
        <div className="relative p-6 md:p-8 backdrop-brightness-[1.02]">
          {/* Number now positioned relative to content area */}
          <motion.span
            initial={{ opacity: 0, scale: 0.5 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{
              type: "spring",
              stiffness: 260,
              damping: 20,
              delay: 0.2,
            }}
            className="absolute top-4 right-6 text-5xl font-instrument-serif italic text-white/30"
          >
            {number}
          </motion.span>

          <div className="relative z-20">
            <h3 className="text-2xl font-instrument-serif italic mb-2 bg-gradient-to-r from-white to-white/60 bg-clip-text text-transparent group-hover:to-white/90 transition-all duration-500">
              {title}
            </h3>
            <p className="text-white/60 leading-relaxed group-hover:text-white/70 transition-colors duration-500">
              {description}
            </p>
          </div>
        </div>
      </div>
    </motion.div>
  );
}

export default function HowItWorks() {
  return (
    <section className="py-20 px-4">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        viewport={{ once: true }}
        className="max-w-6xl mx-auto"
      >
        <div className="text-center mb-16">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            viewport={{ once: true }}
            className="text-4xl md:text-5xl font-instrument-serif italic mb-6"
          >
            How We Work
          </motion.h2>

          <motion.p
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            viewport={{ once: true }}
            className="flex items-center justify-center gap-6 flex-wrap md:flex-nowrap"
          >
            <span className="flex items-center group">
              <img
                src="/globe.svg"
                alt="Global"
                className="w-4 h-4 mr-2 opacity-40 group-hover:opacity-60 transition-opacity"
              />
              Worldwide Service
            </span>
            <span className="hidden md:inline text-white/20">•</span>
            <span className="flex items-center group">
              <img
                src="/window.svg"
                alt="Updates"
                className="w-4 h-4 mr-2 opacity-40 group-hover:opacity-60 transition-opacity"
              />
              Weekly Updates
            </span>
            <span className="hidden md:inline text-white/20">•</span>
            <span className="flex items-center group">
              <img
                src="/file.svg"
                alt="Documentation"
                className="w-4 h-4 mr-2 opacity-40 group-hover:opacity-60 transition-opacity"
              />
              Full Documentation
            </span>
          </motion.p>
        </div>

        <motion.div
          variants={container}
          initial="hidden"
          whileInView="show"
          viewport={{ once: true }}
          className="grid grid-cols-1 md:grid-cols-3 gap-8 relative"
        >
          {/* Animated gradient line connecting cards */}
          <div className="absolute hidden md:block top-1/2 left-[16.67%] right-[16.67%] h-px bg-gradient-to-r from-transparent via-white/20 to-transparent" />

          {steps.map((step) => (
            <ProcessCard
              key={step.number}
              number={step.number}
              title={step.title}
              description={step.description}
            />
          ))}
        </motion.div>
      </motion.div>
    </section>
  );
}

================
File: components/ui/infinite-moving-cards.tsx
================
"use client";

import { cn } from "@/lib/utils";
import React, { useEffect, useState } from "react";
import Image from "next/image";

interface Project {
  id: number;
  image: string;
}

interface InfiniteMovingCardsProps {
  items: Project[];
  direction?: "left" | "right";
  speed?: "fast" | "normal" | "slow";
  pauseOnHover?: boolean;
  className?: string;
}

export const InfiniteMovingCards: React.FC<InfiniteMovingCardsProps> = ({
  items,
  direction = "right",
  speed = "slow",
  pauseOnHover = true,
  className,
}) => {
  const containerRef = React.useRef<HTMLDivElement>(null);
  const scrollerRef = React.useRef<HTMLUListElement>(null);
  const [start, setStart] = useState(false);

  useEffect(() => {
    const addAnimation = () => {
      if (containerRef.current && scrollerRef.current) {
        const scrollerContent = Array.from(scrollerRef.current.children);
        scrollerContent.forEach((item) => {
          const duplicatedItem = item.cloneNode(true);
          scrollerRef.current?.appendChild(duplicatedItem);
        });
        getDirection();
        getSpeed();
        setStart(true);
      }
    };

    const getDirection = () => {
      if (containerRef.current) {
        containerRef.current.style.setProperty(
          "--animation-direction",
          direction === "left" ? "forwards" : "reverse"
        );
      }
    };

    const getSpeed = () => {
      if (containerRef.current) {
        const duration =
          speed === "fast" ? "20s" : speed === "normal" ? "40s" : "80s";
        containerRef.current.style.setProperty("--animation-duration", duration);
      }
    };

    addAnimation();
  }, [direction, speed]);

  return (
    <div
      ref={containerRef}
      className={cn(
        "scroller relative z-20 max-w-7xl overflow-hidden [mask-image:linear-gradient(to_right,transparent,white_20%,white_80%,transparent)]",
        className
      )}
    >
      <ul
        ref={scrollerRef}
        className={cn(
          "flex min-w-full shrink-0 gap-12 py-4 w-max flex-nowrap",
          start && "animate-scroll",
          pauseOnHover && "hover:[animation-play-state:paused]"
        )}
      >
        {items.map((project) => (
          <li
            key={project.id}
            className="relative w-[600px] rounded-xl overflow-hidden flex-shrink-0"
          >
            <Image
              src={project.image}
              alt={`Project ${project.id}`}
              width={600}
              height={400}
              className="object-cover object-center w-full h-full"
              priority
            />
          </li>
        ))}
      </ul>
    </div>
  );
};

================
File: components/footer.tsx
================
"use client"

import Image from "next/image"
import Link from "next/link"
import { motion } from "framer-motion"
import { Sparkles } from "lucide-react"

const socials = [
  {
    name: "Email",
    icon: "/socials/mail.svg",
    href: "mailto:hello@haloweave.com",
  },
  {
    name: "X",
    icon: "/socials/x.svg",
    href: "https://x.com/haloweave",
  },
  {
    name: "Instagram",
    icon: "/socials/instagram.svg",
    href: "https://instagram.com/haloweave",
  },
  {
    name: "LinkedIn",
    icon: "/socials/linkedin.svg",
    href: "https://linkedin.com/company/haloweave",
  },
  {
    name: "Facebook",
    icon: "/socials/facebook.svg",
    href: "https://facebook.com/haloweave",
  },
]

const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.1,
    },
  },
}

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: {
    opacity: 1,
    y: 0,
    transition: {
      duration: 0.5,
    },
  },
}

export default function Footer() {
  return (
    <footer>
      <motion.div
        variants={containerVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className="max-w-[1200px] mx-auto px-4 py-12"
      >
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8 items-center">
          {/* Logo */}
          <motion.div variants={itemVariants} className="flex justify-center md:justify-start">
            <Link href="/" className="relative group">
              <Image
                src="/logo-horizontal.svg"
                alt="Haloweave Logo"
                width={108}
                height={33}
                className="transition-opacity duration-300 group-hover:opacity-80"
              />
            </Link>
          </motion.div>

          {/* Social Links */}
          <motion.div variants={itemVariants} className="flex justify-center gap-6">
            {socials.map((social) => (
              <Link
                key={social.name}
                href={social.href}
                className="text-white/60 hover:text-white transition-colors duration-300"
                target="_blank"
                rel="noopener noreferrer"
              >
                <span className="sr-only">{social.name}</span>
                <Image
                  src={social.icon || "/placeholder.svg"}
                  alt={social.name}
                  width={33}
                  height={33}
                  className="footer-icon w-7 h-8 opacity-60 hover:opacity-100 transition-opacity duration-300"
                />
              </Link>
            ))}
          </motion.div>

          {/* Copyright */}
          <motion.div
            variants={itemVariants}
            className="flex justify-center md:justify-end items-center gap-1 text-sm text-white/60"
          >
            <span>© {new Date().getFullYear()} Haloweave</span>
            <Sparkles className="w-4 h-4" />
          </motion.div>
        </div>
      </motion.div>
    </footer>
  )
}

================
File: components/hero.tsx
================
"use client";
import { motion } from "framer-motion";
import { Button } from "./ui/button";
import { Sparkles } from "lucide-react";

const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2,
      delayChildren: 0.5
    }
  }
};

const itemVariants = {
  hidden: { opacity: 0, y: 20, filter: "blur(10px)" },
  visible: {
    opacity: 1,
    y: 0,
    filter: "blur(0px)",
    transition: {
      duration: 0.5
    }
  }
};

export function Hero() {
  return (
    <motion.section
      variants={containerVariants}
      initial="hidden"
      animate="visible"
      className="flex min-h-screen items-center justify-center px-4 relative z-10"
    >
      <div className="max-w-4xl text-center">
        <motion.div
          variants={itemVariants}
          className="mb-8 inline-flex items-center rounded-[6px] border border-white/10 bg-white/5 px-3 py-1"
        >
          <span className="mr-2 h-2 w-2 rounded-full bg-green-500 animate-pulse" />
          <span className="text-sm text-white/70">Accepting New Projects</span>
        </motion.div>

        <motion.h1
          variants={itemVariants}
          className="mb-8 text-4xl font-light leading-[1.3] tracking-tight md:text-6xl lg:text-7xl font-instrument-serif italic"
        >
          <span className="block text-white">Your Vision, Our Precision.</span>
          <span className="block text-white/70">AI-Driven Web Development.</span>
        </motion.h1>

        <motion.p
          variants={itemVariants}
          className="mb-12 text-lg text-white/70 md:text-xl"
        >
          At Haloweave, we merge cutting-edge AI with expert craftsmanship to deliver
          <br className="hidden md:block" />
          tailored web solutions—from design to deployment to maintenance. 
          <br className="hidden md:block" />
          Accelerate your success in today&apos;s digital-first world.
        </motion.p>

        <motion.div
          variants={itemVariants}
          className="flex justify-center gap-4"
        >
          <Button variant="outline">
            View Work
          </Button>
          <Button>
            Book a Call
            <Sparkles className="w-4 h-4" />
          </Button>
        </motion.div>
      </div>
    </motion.section>
  );
}

================
File: components/navbar.tsx
================
"use client";

import Link from "next/link";
import { motion, useScroll, useTransform } from "framer-motion";
import { Button } from "./ui/button";
import Image from "next/image";
import { Sparkles } from "lucide-react";

const navLinks = [
  { href: "#how-it-works", label: "How it works" },
  { href: "#portfolio", label: "Portfolio" },
  { href: "#services", label: "Services" }
];

export function Navbar() {
  const { scrollYProgress } = useScroll();

  // Using scrollYProgress (0 to 1) instead of scrollY for more consistent animation
  const opacity = useTransform(scrollYProgress, [0, 0.1], [0, 0.3]);
  const blur = useTransform(scrollYProgress, [0, 0.1], [0, 12]);
  const borderOpacity = useTransform(scrollYProgress, [0, 0.1], [0, 0.1]);

  return (
    <motion.header
      initial={{ y: -100, opacity: 0 }}
      animate={{ 
        y: 0, 
        opacity: 1,
      }}
      transition={{
        type: "spring",
        stiffness: 260,
        damping: 20
      }}
      className="fixed inset-x-0 top-5 z-50 flex justify-center"
    >
      <div className="w-[95%] max-w-[1120px]">
        <motion.div 
          className="rounded-xl px-6 py-4 transition-all duration-200"
          initial={false}
          style={{
            backgroundColor: opacity.get() === 0 ? "transparent" : `rgba(0, 0, 0, ${opacity})`,
            backdropFilter: blur.get() === 0 ? "none" : `blur(${blur.get()}px)`,
            WebkitBackdropFilter: blur.get() === 0 ? "none" : `blur(${blur.get()}px)`,
            borderColor: borderOpacity.get() === 0 ? "transparent" : `rgba(255, 255, 255, ${borderOpacity})`,
            borderWidth: "1px",
            borderStyle: "solid"
          }}
        >
          <div className="flex items-center justify-between">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.2 }}
              className="text-xl font-bold"
            >
              <Image
                src="/logo-horizontal.svg"
                alt="Haloweave Logo"
                width={108}
                height={33}
                priority
              />
            </motion.div>

            <motion.nav 
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.3 }}
              className="hidden md:block"
            >
              <ul className="flex items-center space-x-8">
                {navLinks.map((link, i) => (
                  <motion.li
                    key={link.href}
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.4 + i * 0.1 }}
                  >
                    <Link
                      href={link.href}
                      className="text-sm text-white/70 hover:text-white transition-colors"
                    >
                      {link.label}
                    </Link>
                  </motion.li>
                ))}
              </ul>
            </motion.nav>

            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.5 }}
            >
              <Button className="group">
                <span className="transition-transform duration-300 group-hover:translate-x-1">
                  Book a Call
                </span>
                <Sparkles className="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" />
              </Button>
            </motion.div>
          </div>
        </motion.div>
      </div>
    </motion.header>
  );
}

================
File: components/testimonial.tsx
================
'use client';

import { motion } from "framer-motion";

export default function TestimonialSection() {
  return (
    <div className="py-24">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.7 }}
        className="max-w-3xl mx-auto px-4 text-center"
      >
        {/* Testimonial Text */}
        <motion.blockquote 
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.1 }}
          className="text-[14px] text-white/60 font-light leading-relaxed mb-6"
        >
          &quot;I am immensely grateful for my website team. Their responsiveness, intelligence, and dedication have played a pivotal role in ensuring that my website remains technologically relevant. With their expertise and support, we have not only kept pace with advancements but also stayed ahead of the curve. Their invaluable contributions have been instrumental in our online success, and I couldn&apos;t be more appreciative of their efforts.&quot;
        </motion.blockquote>

        {/* Author Section */}
        <motion.div 
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.2 }}
          className="flex items-center justify-center gap-3"
        >
          {/* Author Image */}
          <div className="w-10 h-10 rounded-full overflow-hidden bg-white/5">
            <img
              src="/dabney-g.png"
              alt="Dean Koštomaj"
              className="object-cover w-full h-full"
            />
          </div>

          {/* Author Info */}
          <div className="text-left">
            <h4 className="text-[14px] text-white font-medium leading-tight">Dabney G - AAR</h4>
          </div>
        </motion.div>
      </motion.div>
    </div>
  );
}

================
File: components/who-is-it-for.tsx
================
"use client"

import { motion } from "framer-motion"
import { Button } from "./ui/button"
import { Sparkles } from "lucide-react"

const categories = [
  {
    title: "Founders",
    description:
      "Transform your vision into reality in just 14 days. From concept to launch, we deliver complete branding, design, and development solutions that set you apart.",
    pattern: (
      <svg className="w-8 h-8 mb-6 text-white/20" viewBox="0 0 24 24">
        <circle cx="4" cy="4" r="2" fill="currentColor" />
        <circle cx="12" cy="4" r="2" fill="currentColor" />
        <circle cx="20" cy="4" r="2" fill="currentColor" />
        <circle cx="4" cy="12" r="2" fill="currentColor" />
        <circle cx="12" cy="12" r="2" fill="currentColor" />
      </svg>
    ),
  },
  {
    title: "Start-ups",
    description:
      "Accelerate your growth with strategic development. We help clear your roadmap, ship new features, and optimize user flows for maximum impact.",
    pattern: (
      <svg className="w-8 h-8 mb-6 text-white/20" viewBox="0 0 24 24">
        <circle cx="4" cy="4" r="2" fill="currentColor" />
        <circle cx="12" cy="4" r="2" fill="currentColor" />
        <circle cx="20" cy="4" r="2" fill="currentColor" />
        <circle cx="4" cy="12" r="2" fill="currentColor" />
        <circle cx="12" cy="12" r="2" fill="currentColor" />
        <circle cx="20" cy="12" r="2" fill="currentColor" />
        <circle cx="12" cy="20" r="2" fill="currentColor" />
      </svg>
    ),
  },
  {
    title: "Agencies",
    description:
      "Never miss an opportunity. Our white-label development services help you handle overflow, maintain quality, and keep your clients delighted.",
    pattern: (
      <svg className="w-8 h-8 mb-6 text-white/20" viewBox="0 0 24 24">
        <circle cx="4" cy="4" r="2" fill="currentColor" />
        <circle cx="12" cy="4" r="2" fill="currentColor" />
        <circle cx="20" cy="4" r="2" fill="currentColor" />
        <circle cx="4" cy="12" r="2" fill="currentColor" />
        <circle cx="12" cy="12" r="2" fill="currentColor" />
        <circle cx="20" cy="12" r="2" fill="currentColor" />
        <circle cx="4" cy="20" r="2" fill="currentColor" />
        <circle cx="12" cy="20" r="2" fill="currentColor" />
        <circle cx="20" cy="20" r="2" fill="currentColor" />
      </svg>
    ),
  },
]

const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2,
    },
  },
}

const itemVariants = {
  hidden: { opacity: 0, y: 20, filter: "blur(10px)" },
  visible: {
    opacity: 1,
    y: 0,
    filter: "blur(0px)",
    transition: {
      duration: 0.8,
    },
  },
}

export default function WhoIsItFor() {
  return (
    <section className="py-24 px-4">
      <motion.div
        variants={containerVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className="max-w-6xl mx-auto"
      >
        <motion.div variants={itemVariants} className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-instrument-serif italic mb-6">Who is it for?</h2>
          <p className="text-lg text-white/60 max-w-3xl mx-auto">
          Our AI-driven design and development solutions cater to a broad spectrum of clients, but in our experience, most fall into these key categories.
          </p>
        </motion.div>

        <motion.div variants={containerVariants} className="grid md:grid-cols-3 gap-8 mb-16">
          {categories.map((category) => (
            <motion.div
              key={category.title}
              variants={itemVariants}
              className="group relative overflow-hidden rounded-xl bg-white/[0.02] border border-white/[0.08] p-8 transition-all duration-500 hover:bg-white/[0.04]"
            >
              {category.pattern}
              <h3 className="text-3xl font-instrument-serif italic mb-4 bg-gradient-to-r from-white to-white/60 bg-clip-text text-transparent group-hover:to-white/90 transition-all duration-500">
                {category.title}
              </h3>
              <p className="text-white/60 leading-relaxed group-hover:text-white/70 transition-colors duration-500">
                {category.description}
              </p>
            </motion.div>
          ))}
        </motion.div>

        <motion.div variants={itemVariants} className="flex flex-col sm:flex-row items-center justify-center gap-4">
          <Button>
            Book a Call
            <Sparkles className="w-4 h-4 ml-2" />
          </Button>
        </motion.div>
      </motion.div>
    </section>
  )
}

================
File: components/work-section.tsx
================
"use client";

import { motion } from "framer-motion";
import { InfiniteMovingCards } from "./ui/infinite-moving-cards";

const projects = [
  { id: 1, image: "/projects/Assistly.png" },
  { id: 2, image: "/projects/Workmate.png" },
  { id: 3, image: "/projects/SenateInsights.png" },
  { id: 4, image: "/projects/JourneyofCompassion.png" },
  { id: 5, image: "/projects/Aicompass.png" },
  { id: 6, image: "/projects/Studionaadi.png" },
  { id: 7, image: "/projects/BespokeAstrology.png" },
  { id: 8, image: "/projects/Minerva.png" },
];

export function WorkSection() {
  return (
    <section className="py-20 overflow-hidden">
      <motion.div
        initial={{ opacity: 0, y: 20, filter: "blur(10px)" }}
        whileInView={{ opacity: 1, y: 0, filter: "blur(0px)" }}
        transition={{ duration: 0.8 }}
        viewport={{ once: false }}
        className="mb-16 flex items-center gap-4 justify-center"
      >
        <p className="text-2xl text-white/90 font-homemade-apple">
          Some  of  our  recent  work!
        </p>
        <motion.img
          src="/arrow-2.svg"
          alt="Arrow"
          className="w-12 h-12 mt-6"
          initial={{ opacity: 0, x: -10 }}
          whileInView={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.8, delay: 0.2 }}
          viewport={{ once: false }}
        />
      </motion.div>

      <div className="relative">
        {/* Gradient overlay */}
        <div className="absolute pointer-events-none" />
        
        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 1 }}
          viewport={{ once: false }}
          className="relative z-10"
        >
          <InfiniteMovingCards items={projects} direction="right" speed="slow" />
        </motion.div>
      </div>
    </section>
  );
}

================
File: lib/utils.ts
================
// lib/utils.ts
import { ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

================
File: public/socials/facebook.svg
================
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M16,2c-7.732,0-14,6.268-14,14,0,6.566,4.52,12.075,10.618,13.588v-9.31h-2.887v-4.278h2.887v-1.843c0-4.765,2.156-6.974,6.835-6.974,.887,0,2.417,.174,3.043,.348v3.878c-.33-.035-.904-.052-1.617-.052-2.296,0-3.183,.87-3.183,3.13v1.513h4.573l-.786,4.278h-3.787v9.619c6.932-.837,12.304-6.74,12.304-13.897,0-7.732-6.268-14-14-14Z"></path></svg>

================
File: public/socials/instagram.svg
================
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M10.202,2.098c-1.49,.07-2.507,.308-3.396,.657-.92,.359-1.7,.84-2.477,1.619-.776,.779-1.254,1.56-1.61,2.481-.345,.891-.578,1.909-.644,3.4-.066,1.49-.08,1.97-.073,5.771s.024,4.278,.096,5.772c.071,1.489,.308,2.506,.657,3.396,.359,.92,.84,1.7,1.619,2.477,.779,.776,1.559,1.253,2.483,1.61,.89,.344,1.909,.579,3.399,.644,1.49,.065,1.97,.08,5.771,.073,3.801-.007,4.279-.024,5.773-.095s2.505-.309,3.395-.657c.92-.36,1.701-.84,2.477-1.62s1.254-1.561,1.609-2.483c.345-.89,.579-1.909,.644-3.398,.065-1.494,.081-1.971,.073-5.773s-.024-4.278-.095-5.771-.308-2.507-.657-3.397c-.36-.92-.84-1.7-1.619-2.477s-1.561-1.254-2.483-1.609c-.891-.345-1.909-.58-3.399-.644s-1.97-.081-5.772-.074-4.278,.024-5.771,.096m.164,25.309c-1.365-.059-2.106-.286-2.6-.476-.654-.252-1.12-.557-1.612-1.044s-.795-.955-1.05-1.608c-.192-.494-.423-1.234-.487-2.599-.069-1.475-.084-1.918-.092-5.656s.006-4.18,.071-5.656c.058-1.364,.286-2.106,.476-2.6,.252-.655,.556-1.12,1.044-1.612s.955-.795,1.608-1.05c.493-.193,1.234-.422,2.598-.487,1.476-.07,1.919-.084,5.656-.092,3.737-.008,4.181,.006,5.658,.071,1.364,.059,2.106,.285,2.599,.476,.654,.252,1.12,.555,1.612,1.044s.795,.954,1.051,1.609c.193,.492,.422,1.232,.486,2.597,.07,1.476,.086,1.919,.093,5.656,.007,3.737-.006,4.181-.071,5.656-.06,1.365-.286,2.106-.476,2.601-.252,.654-.556,1.12-1.045,1.612s-.955,.795-1.608,1.05c-.493,.192-1.234,.422-2.597,.487-1.476,.069-1.919,.084-5.657,.092s-4.18-.007-5.656-.071M21.779,8.517c.002,.928,.755,1.679,1.683,1.677s1.679-.755,1.677-1.683c-.002-.928-.755-1.679-1.683-1.677,0,0,0,0,0,0-.928,.002-1.678,.755-1.677,1.683m-12.967,7.496c.008,3.97,3.232,7.182,7.202,7.174s7.183-3.232,7.176-7.202c-.008-3.97-3.233-7.183-7.203-7.175s-7.182,3.233-7.174,7.203m2.522-.005c-.005-2.577,2.08-4.671,4.658-4.676,2.577-.005,4.671,2.08,4.676,4.658,.005,2.577-2.08,4.671-4.658,4.676-2.577,.005-4.671-2.079-4.676-4.656h0"></path></svg>

================
File: public/socials/linkedin.svg
================
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M26.111,3H5.889c-1.595,0-2.889,1.293-2.889,2.889V26.111c0,1.595,1.293,2.889,2.889,2.889H26.111c1.595,0,2.889-1.293,2.889-2.889V5.889c0-1.595-1.293-2.889-2.889-2.889ZM10.861,25.389h-3.877V12.87h3.877v12.519Zm-1.957-14.158c-1.267,0-2.293-1.034-2.293-2.31s1.026-2.31,2.293-2.31,2.292,1.034,2.292,2.31-1.026,2.31-2.292,2.31Zm16.485,14.158h-3.858v-6.571c0-1.802-.685-2.809-2.111-2.809-1.551,0-2.362,1.048-2.362,2.809v6.571h-3.718V12.87h3.718v1.686s1.118-2.069,3.775-2.069,4.556,1.621,4.556,4.975v7.926Z" fill-rule="evenodd"></path></svg>

================
File: public/socials/mail-2.svg
================
<svg width="41" height="40" viewBox="0 0 41 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_d_115_8)">
<path d="M20.6871 32C17.6197 32 14.8425 31.2815 12.3555 29.8446C9.86842 28.4352 7.90642 26.5147 6.46946 24.0829C5.06013 21.6235 4.35547 18.9292 4.35547 16C4.35547 13.0984 5.06013 10.4318 6.46946 8C7.87878 5.54059 9.82697 3.5924 12.314 2.15544C14.8011 0.718481 17.5921 0 20.6871 0C23.7268 0 26.4764 0.718481 28.9358 2.15544C31.4228 3.5924 33.3572 5.52677 34.7389 7.95855C36.1482 10.3903 36.8529 13.0432 36.8529 15.9171C36.8529 18.4594 36.2864 20.5458 35.1534 22.1762C34.048 23.8066 32.4729 24.6218 30.428 24.6218C29.3779 24.6218 28.4246 24.3592 27.5679 23.8342C26.7389 23.2815 26.1033 22.5354 25.6612 21.5959C25.0256 22.563 24.2104 23.3092 23.2156 23.8342C22.2484 24.3592 21.143 24.6218 19.8995 24.6218C18.4073 24.6218 17.0532 24.2625 15.8373 23.544C14.6214 22.8256 13.6543 21.8307 12.9358 20.5596C12.2173 19.2608 11.8581 17.7962 11.8581 16.1658C11.8581 14.563 12.2173 13.1123 12.9358 11.8135C13.6543 10.5147 14.6076 9.50605 15.7959 8.78757C17.0118 8.06909 18.3244 7.70985 19.7337 7.70985C20.7562 7.70985 21.6819 7.9171 22.5109 8.33161C23.3676 8.74611 24.086 9.31261 24.6663 10.0311H24.9151V8.29016H28.3969V18.8187C28.3969 19.5371 28.5904 20.1727 28.9772 20.7254C29.3641 21.2504 29.9306 21.513 30.6767 21.513C31.6715 21.513 32.3762 20.9741 32.7907 19.8964C33.2328 18.791 33.4539 17.4646 33.4539 15.9171C33.4539 13.6511 32.8874 11.5648 31.7544 9.65803C30.6491 7.72366 29.1154 6.18998 27.1534 5.057C25.219 3.92401 23.0636 3.35751 20.6871 3.35751C18.3382 3.35751 16.1966 3.91019 14.2622 5.01555C12.3278 6.09326 10.7942 7.59931 9.66117 9.53368C8.52818 11.468 7.96169 13.6235 7.96169 16C7.96169 18.3765 8.52818 20.532 9.66117 22.4663C10.8218 24.4007 12.3693 25.9206 14.3037 27.0259C16.2657 28.1036 18.3935 28.6425 20.6871 28.6425C22.732 28.6425 24.5144 28.228 26.0342 27.399L27.3192 30.5907C25.3019 31.5302 23.0912 32 20.6871 32ZM20.1897 21.057C21.4608 21.057 22.5524 20.6149 23.4643 19.7306C24.3762 18.8463 24.8322 17.658 24.8322 16.1658C24.8322 14.6736 24.3762 13.4853 23.4643 12.601C22.5524 11.7168 21.4608 11.2746 20.1897 11.2746C18.9185 11.2746 17.827 11.7168 16.9151 12.601C16.0308 13.4853 15.5886 14.6736 15.5886 16.1658C15.5886 17.658 16.0308 18.8463 16.9151 19.7306C17.827 20.6149 18.9185 21.057 20.1897 21.057Z" fill="black"/>
</g>
<defs>
<filter id="filter0_d_115_8" x="0.355469" y="0" width="40.4971" height="40" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_115_8"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_115_8" result="shape"/>
</filter>
</defs>
</svg>

================
File: public/socials/mail.svg
================
<svg width="34" height="32" viewBox="0 0 34 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.3071 32C14.1568 32 11.3244 31.2815 8.80968 29.8446C6.32263 28.4352 4.37444 26.5147 2.96512 24.0829C1.58342 21.6235 0.892578 18.9292 0.892578 16C0.892578 13.0708 1.58342 10.3903 2.96512 7.95855C4.37444 5.52677 6.32263 3.5924 8.80968 2.15544C11.3244 0.718481 14.1568 0 17.3071 0C20.4573 0 23.2622 0.718481 25.7216 2.15544C28.2086 3.56477 30.143 5.48532 31.5247 7.9171C32.9064 10.3212 33.5972 12.9603 33.5972 15.8342C33.5972 18.4041 32.9893 20.5181 31.7734 22.1762C30.5852 23.8066 28.9686 24.6218 26.9237 24.6218C25.8736 24.6218 24.9064 24.3592 24.0221 23.8342C23.1378 23.2815 22.4746 22.5492 22.0325 21.6373C20.789 23.6269 18.8822 24.6218 16.3123 24.6218C14.82 24.6218 13.466 24.2625 12.2501 23.544C11.0342 22.8256 10.067 21.8307 9.34854 20.5596C8.63006 19.2608 8.27082 17.7962 8.27082 16.1658C8.27082 14.563 8.63006 13.1123 9.34854 11.8135C10.067 10.5147 11.0204 9.50605 12.2086 8.78757C13.4245 8.06909 14.7371 7.70985 16.1465 7.70985C17.1413 7.70985 18.0117 7.9171 18.7579 8.33161C19.5316 8.71848 20.1534 9.22971 20.6231 9.86529H20.9548V8.29016H25.0169V18.487C25.0169 19.2055 25.1966 19.8135 25.5558 20.3109C25.9427 20.7807 26.4539 21.0155 27.0895 21.0155C27.9461 21.0155 28.5817 20.532 28.9962 19.5648C29.4383 18.5976 29.6594 17.3402 29.6594 15.7927C29.6594 13.6926 29.1206 11.7168 28.0428 9.86529C26.9928 8.01382 25.5282 6.53541 23.6491 5.43005C21.77 4.3247 19.656 3.77202 17.3071 3.77202C15.0135 3.77202 12.9271 4.28325 11.048 5.3057C9.19655 6.32815 7.73196 7.77893 6.65424 9.65803C5.57652 11.5095 5.03766 13.6235 5.03766 16C5.03766 18.3489 5.60415 20.4629 6.73714 22.342C7.87013 24.1934 9.37617 25.6442 11.2553 26.6943C13.1344 27.7168 15.1516 28.228 17.3071 28.228C19.3796 28.228 21.2173 27.772 22.82 26.8601L24.2294 30.4663C23.2069 30.9361 22.1016 31.3092 20.9133 31.5855C19.725 31.8618 18.523 32 17.3071 32ZM16.6024 20.601C17.763 20.601 18.744 20.2003 19.5454 19.399C20.3744 18.5976 20.789 17.5199 20.789 16.1658C20.789 14.8117 20.3744 13.734 19.5454 12.9326C18.744 12.1313 17.763 11.7306 16.6024 11.7306C15.4418 11.7306 14.447 12.1451 13.618 12.9741C12.8166 13.7755 12.4159 14.8394 12.4159 16.1658C12.4159 17.4922 12.8166 18.5699 13.618 19.399C14.447 20.2003 15.4418 20.601 16.6024 20.601Z" fill="black"/>
</svg>

================
File: public/socials/x.svg
================
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M18.42,14.009L27.891,3h-2.244l-8.224,9.559L10.855,3H3.28l9.932,14.455L3.28,29h2.244l8.684-10.095,6.936,10.095h7.576l-10.301-14.991h0Zm-3.074,3.573l-1.006-1.439L6.333,4.69h3.447l6.462,9.243,1.006,1.439,8.4,12.015h-3.447l-6.854-9.804h0Z"></path></svg>

================
File: public/arrow-2.svg
================
<svg width="246" height="287" viewBox="0 0 246 287" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_3_232)">
<path d="M156.25 265.656C157.94 265.444 158.573 265.656 159.207 265.444C197.847 242.174 224.029 209.172 233.953 164.747C236.487 153.535 236.065 141.899 233.109 130.476C226.985 105.936 206.504 89.0121 181.377 87.5312C168.286 86.685 155.617 88.1659 144.215 95.3586C143.37 101.493 142.737 107.628 141.47 113.34C139.359 122.648 134.502 130.264 125.845 134.918C119.51 138.515 113.176 138.515 109.798 135.13C105.363 130.687 105.364 124.764 108.108 119.898C111.909 113.129 116.554 106.782 121.411 100.859C124.578 97.051 128.801 93.8777 132.602 90.7045C129.012 66.7994 106.419 56.645 79.3921 66.5878C78.5475 69.9726 77.7029 73.569 76.6472 76.9538C72.4242 89.4352 64.6117 98.9549 51.9427 103.397C47.0863 105.09 41.8075 105.724 37.5845 101.282C34.4173 97.8972 34.4173 91.9738 37.7957 86.0504C43.2856 76.7422 51.5204 70.1842 60.3887 64.4723C63.5559 62.5684 66.7232 60.6644 69.8904 58.972C65.6674 21.9508 32.517 -4.28131 0 10.5272C0.211149 7.77702 -1.29001e-05 5.44997 0.844584 4.18067C1.90033 2.69982 4.22297 1.85363 6.12332 1.43053C24.071 -1.95427 40.7518 0.161227 54.4765 13.2773C64.8228 23.0086 71.7908 34.8554 76.4361 48.3946C77.0695 50.2985 77.703 52.2024 78.5476 54.1064C78.5476 54.3179 78.9698 54.5295 79.8144 55.1641C81.7147 54.9526 84.0374 54.9526 86.36 54.5295C114.654 50.087 129.434 57.7027 142.526 84.1464C145.06 83.3002 148.016 82.454 150.761 81.3963C167.019 75.896 183.278 75.4729 199.747 80.9732C226.563 89.8583 243.877 112.917 245.778 142.111C246.833 157.977 244.089 173.209 238.388 188.017C224.452 223.769 201.648 251.905 167.441 270.31C165.752 271.368 163.852 272.214 162.163 273.272C161.951 273.483 161.74 273.906 161.107 275.176C168.286 276.868 175.043 276.233 181.8 275.81C188.345 275.599 195.102 274.964 202.281 274.541C201.648 280.041 198.691 282.157 195.102 283.426C190.879 284.695 186.656 286.388 182.433 286.599C171.031 287.023 159.418 287.234 147.804 286.599C138.725 285.965 136.191 281.099 140.203 273.695C148.86 258.04 157.728 242.386 166.597 226.731C168.075 224.192 169.975 222.077 172.298 219.115C176.31 223.769 174.62 227.154 173.142 230.327C167.23 241.751 161.951 253.175 156.25 265.656ZM43.919 94.9355C58.4883 93.0315 67.5677 83.7233 68.2012 70.6073C58.4883 76.9538 49.1978 82.6656 43.919 94.9355ZM115.288 127.726C127.745 124.764 133.658 116.302 132.391 103.397C124.367 110.167 117.399 116.514 115.288 127.726Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_3_232">
<rect width="246" height="287" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/logo-horizontal.svg
================
<svg width="113" height="29" viewBox="0 0 113 29" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.3711 15.4083C3.9751 30.0133 24.8147 30.0092 25.4186 15.4083C25.4186 13.9628 25.1335 12.5314 24.5795 11.196C24.0255 9.86052 23.2135 8.6471 22.1898 7.62499C21.1662 6.60287 19.9509 5.79209 18.6135 5.23892C17.276 4.68579 15.8425 4.40107 14.3949 4.40107C12.9472 4.40107 11.5137 4.68579 10.1763 5.23892C8.8388 5.79209 7.62355 6.60287 6.59989 7.62499C5.57623 8.6471 4.76423 9.86052 4.21023 11.196C3.65624 12.5314 3.3711 13.9628 3.3711 15.4083ZM24.1901 15.4083C24.1901 18.0022 23.1581 20.4899 21.3211 22.3241C19.4842 24.1583 16.9927 25.1888 14.3949 25.1888C11.797 25.1888 9.30555 24.1583 7.46859 22.3241C5.63163 20.4899 4.59963 18.0022 4.59963 15.4083C5.13786 2.43184 23.6519 2.43594 24.1901 15.4083Z" fill="white"/>
<path d="M8.76179 1.80005L0.794922 9.7549V21.0041L8.76179 28.959H20.028L27.9948 21.0041V9.7549L20.028 1.80005H8.76179ZM26.8608 20.5365L19.5596 27.8267H9.23018L1.92894 20.5365V10.2226L9.23018 2.93236H19.5596L26.8608 10.2226V20.5365Z" fill="white"/>
<path d="M26.5937 0.958988C26.1522 0.958177 25.7202 1.08824 25.3527 1.33271C24.9852 1.57718 24.6986 1.92506 24.5292 2.33228C24.3598 2.7395 24.3153 3.18775 24.4012 3.62027C24.4872 4.05279 24.6998 4.45008 25.0121 4.76188C25.3243 5.07367 25.7222 5.28593 26.1554 5.37177C26.5886 5.45757 27.0375 5.41311 27.4453 5.24399C27.8532 5.07487 28.2016 4.78871 28.4464 4.42175C28.6913 4.05476 28.8215 3.62351 28.8207 3.18257C28.8196 2.59317 28.5846 2.02822 28.1673 1.61146C27.7498 1.19469 27.184 0.960073 26.5937 0.958988ZM26.5937 4.29847C26.3725 4.29928 26.1561 4.23453 25.9717 4.11239C25.7874 3.99028 25.6435 3.81628 25.5583 3.61246C25.4731 3.40863 25.4504 3.18413 25.493 2.9674C25.5357 2.75066 25.6418 2.55145 25.7979 2.39497C25.9541 2.2385 26.1532 2.13182 26.3701 2.08843C26.587 2.04503 26.8119 2.06689 27.0164 2.15123C27.2208 2.23557 27.3956 2.37859 27.5186 2.56219C27.6416 2.74578 27.7072 2.96169 27.7072 3.18257C27.7072 3.47781 27.59 3.76102 27.3813 3.97019C27.1727 4.17933 26.8894 4.29739 26.5937 4.29847Z" fill="white"/>
<path d="M32.0348 9.75497H33.7616V12.8161L33.6831 14.0405H33.7616C33.9919 13.6638 34.332 13.3551 34.782 13.1144C35.2425 12.8632 35.7343 12.7376 36.2576 12.7376C37.2309 12.7376 37.9739 13.0254 38.4867 13.601C38.9995 14.1661 39.2559 14.9406 39.2559 15.9243V20.9948H37.5291V16.1598C37.5291 15.5528 37.3669 15.0975 37.0425 14.794C36.7285 14.4905 36.3152 14.3388 35.8024 14.3388C35.4151 14.3388 35.0646 14.4487 34.7506 14.6685C34.4471 14.8882 34.2064 15.1813 34.0285 15.5476C33.8506 15.9034 33.7616 16.2854 33.7616 16.6935V20.9948H32.0348V9.75497Z" fill="white"/>
<path d="M44.1754 21.2459C43.5998 21.2459 43.087 21.1361 42.637 20.9163C42.1869 20.686 41.8364 20.3669 41.5852 19.9587C41.334 19.5401 41.2084 19.0691 41.2084 18.5459C41.2084 17.7191 41.5172 17.065 42.1346 16.5836C42.7625 16.1022 43.5527 15.8615 44.505 15.8615C44.976 15.8615 45.3998 15.9086 45.7766 16.0028C46.1533 16.0865 46.4516 16.1807 46.6714 16.2854V15.8772C46.6714 15.3853 46.4882 14.9877 46.1219 14.6842C45.7556 14.3702 45.2847 14.2132 44.7091 14.2132C44.3009 14.2132 43.9137 14.3022 43.5474 14.4801C43.1916 14.658 42.9038 14.9039 42.684 15.2179L41.4753 14.2917C41.8311 13.7998 42.2916 13.4178 42.8567 13.1458C43.4219 12.8737 44.0498 12.7376 44.7405 12.7376C45.9021 12.7376 46.7969 13.0254 47.4249 13.601C48.0528 14.1661 48.3667 14.9667 48.3667 16.0028V20.9948H46.6714V20.0372H46.5929C46.3626 20.3826 46.0382 20.6704 45.6196 20.9006C45.201 21.1308 44.7196 21.2459 44.1754 21.2459ZM44.4736 19.8174C44.8922 19.8174 45.269 19.718 45.6039 19.5192C45.9388 19.3203 46.2004 19.0535 46.3888 18.7186C46.5772 18.3837 46.6714 18.0226 46.6714 17.6354C46.4306 17.4993 46.1481 17.3895 45.8237 17.3057C45.5097 17.222 45.18 17.1802 44.8347 17.1802C44.1858 17.1802 43.7097 17.311 43.4062 17.5726C43.1027 17.8238 42.9509 18.1534 42.9509 18.5616C42.9509 18.9279 43.0922 19.2314 43.3748 19.4721C43.6573 19.7023 44.0236 19.8174 44.4736 19.8174Z" fill="white"/>
<path d="M50.7713 9.75497H52.4981V20.9948H50.7713V9.75497Z" fill="white"/>
<path d="M58.7251 21.2459C57.9193 21.2459 57.1972 21.0628 56.5588 20.6965C55.9204 20.3198 55.4233 19.807 55.0675 19.1581C54.7116 18.5093 54.5337 17.7871 54.5337 16.9918C54.5337 16.1964 54.7116 15.4743 55.0675 14.8254C55.4233 14.1766 55.9204 13.669 56.5588 13.3027C57.1972 12.926 57.9193 12.7376 58.7251 12.7376C59.5309 12.7376 60.253 12.926 60.8914 13.3027C61.5298 13.6795 62.0269 14.1923 62.3827 14.8411C62.7386 15.49 62.9165 16.2069 62.9165 16.9918C62.9165 17.7871 62.7386 18.5093 62.3827 19.1581C62.0269 19.807 61.5298 20.3198 60.8914 20.6965C60.253 21.0628 59.5309 21.2459 58.7251 21.2459ZM58.7251 19.6604C59.1646 19.6604 59.5728 19.5558 59.9496 19.3465C60.3263 19.1267 60.6246 18.818 60.8443 18.4203C61.0746 18.0121 61.1897 17.536 61.1897 16.9918C61.1897 16.4476 61.0746 15.9766 60.8443 15.5789C60.6246 15.1813 60.3263 14.8778 59.9496 14.6685C59.5728 14.4487 59.1646 14.3388 58.7251 14.3388C58.2856 14.3388 57.8774 14.4487 57.5007 14.6685C57.1239 14.8778 56.8204 15.1813 56.5902 15.5789C56.3704 15.9766 56.2605 16.4476 56.2605 16.9918C56.2605 17.536 56.3704 18.0121 56.5902 18.4203C56.8204 18.818 57.1239 19.1267 57.5007 19.3465C57.8774 19.5558 58.2856 19.6604 58.7251 19.6604Z" fill="white"/>
<path d="M63.9833 12.9888H65.8513L67.4682 18.7186H67.531L69.3363 12.9888H71.1102L72.8998 18.7186H72.9625L74.5795 12.9888H76.4161L73.8573 20.9948H72.0364L70.1997 15.2493H70.1526L68.3316 20.9948H66.542L63.9833 12.9888Z" fill="white"/>
<path d="M81.5525 21.2459C80.7676 21.2459 80.0612 21.0628 79.4333 20.6965C78.8158 20.3302 78.3292 19.8279 77.9733 19.1895C77.628 18.5406 77.4553 17.8133 77.4553 17.0075C77.4553 16.2435 77.6228 15.5371 77.9576 14.8882C78.303 14.2289 78.7792 13.7056 79.3862 13.3184C79.9932 12.9312 80.6839 12.7376 81.4583 12.7376C82.2641 12.7376 82.9601 12.9155 83.5462 13.2713C84.1427 13.6272 84.5927 14.1138 84.8962 14.7313C85.2101 15.3487 85.3671 16.0447 85.3671 16.8191C85.3671 16.9656 85.3514 17.1488 85.32 17.3685H79.1821C79.2449 18.1116 79.5065 18.6872 79.967 19.0953C80.4379 19.493 80.9821 19.6918 81.5996 19.6918C82.0915 19.6918 82.5153 19.582 82.8711 19.3622C83.2374 19.1319 83.5305 18.8232 83.7502 18.436L85.2102 19.1267C84.8334 19.786 84.3415 20.3041 83.7345 20.6808C83.1275 21.0576 82.4002 21.2459 81.5525 21.2459ZM83.6089 16.0499C83.588 15.7673 83.4991 15.49 83.3421 15.2179C83.1851 14.9353 82.9444 14.6999 82.62 14.5115C82.306 14.3231 81.9188 14.2289 81.4583 14.2289C80.9036 14.2289 80.4327 14.3964 80.0455 14.7313C79.6687 15.0557 79.4071 15.4952 79.2606 16.0499H83.6089Z" fill="white"/>
<path d="M90.0507 21.2459C89.4751 21.2459 88.9623 21.1361 88.5123 20.9163C88.0623 20.686 87.7117 20.3669 87.4605 19.9587C87.2094 19.5401 87.0838 19.0691 87.0838 18.5459C87.0838 17.7191 87.3925 17.065 88.01 16.5836C88.6379 16.1022 89.428 15.8615 90.3804 15.8615C90.8513 15.8615 91.2752 15.9086 91.6519 16.0028C92.0287 16.0865 92.3269 16.1807 92.5467 16.2854V15.8772C92.5467 15.3853 92.3636 14.9877 91.9973 14.6842C91.631 14.3702 91.16 14.2132 90.5844 14.2132C90.1763 14.2132 89.7891 14.3022 89.4228 14.4801C89.067 14.658 88.7792 14.9039 88.5594 15.2179L87.3507 14.2917C87.7065 13.7998 88.1669 13.4178 88.7321 13.1458C89.2972 12.8737 89.9251 12.7376 90.6158 12.7376C91.7775 12.7376 92.6723 13.0254 93.3002 13.601C93.9281 14.1661 94.2421 14.9667 94.2421 16.0028V20.9948H92.5467V20.0372H92.4682C92.238 20.3826 91.9135 20.6704 91.4949 20.9006C91.0763 21.1308 90.5949 21.2459 90.0507 21.2459ZM90.349 19.8174C90.7676 19.8174 91.1443 19.718 91.4792 19.5192C91.8141 19.3203 92.0758 19.0535 92.2641 18.7186C92.4525 18.3837 92.5467 18.0226 92.5467 17.6354C92.306 17.4993 92.0234 17.3895 91.699 17.3057C91.3851 17.222 91.0554 17.1802 90.71 17.1802C90.0612 17.1802 89.585 17.311 89.2815 17.5726C88.978 17.8238 88.8263 18.1534 88.8263 18.5616C88.8263 18.9279 88.9675 19.2314 89.2501 19.4721C89.5327 19.7023 89.899 19.8174 90.349 19.8174Z" fill="white"/>
<path d="M95.5986 12.9888H97.5294L99.7428 18.7657H99.8056L102.066 12.9888H103.95L100.622 20.9948H98.8951L95.5986 12.9888Z" fill="white"/>
<path d="M109.013 21.2459C108.228 21.2459 107.522 21.0628 106.894 20.6965C106.277 20.3302 105.79 19.8279 105.434 19.1895C105.089 18.5406 104.916 17.8133 104.916 17.0075C104.916 16.2435 105.084 15.5371 105.418 14.8882C105.764 14.2289 106.24 13.7056 106.847 13.3184C107.454 12.9312 108.145 12.7376 108.919 12.7376C109.725 12.7376 110.421 12.9155 111.007 13.2713C111.604 13.6272 112.054 14.1138 112.357 14.7313C112.671 15.3487 112.828 16.0447 112.828 16.8191C112.828 16.9656 112.812 17.1488 112.781 17.3685H106.643C106.706 18.1116 106.967 18.6872 107.428 19.0953C107.899 19.493 108.443 19.6918 109.06 19.6918C109.552 19.6918 109.976 19.582 110.332 19.3622C110.698 19.1319 110.991 18.8232 111.211 18.436L112.671 19.1267C112.294 19.786 111.802 20.3041 111.195 20.6808C110.588 21.0576 109.861 21.2459 109.013 21.2459ZM111.07 16.0499C111.049 15.7673 110.96 15.49 110.803 15.2179C110.646 14.9353 110.405 14.6999 110.081 14.5115C109.767 14.3231 109.38 14.2289 108.919 14.2289C108.364 14.2289 107.894 14.3964 107.506 14.7313C107.13 15.0557 106.868 15.4952 106.721 16.0499H111.07Z" fill="white"/>
</svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: eslint.config.mjs
================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;

================
File: next.config.ts
================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;

================
File: package.json
================
{
  "name": "portfolio",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "clsx": "^2.1.1",
    "framer-motion": "^12.0.6",
    "lenis": "^1.1.20",
    "lucide-react": "^0.474.0",
    "next": "15.1.6",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "repomix": "^0.2.23",
    "tailwind-merge": "^2.6.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.1.6",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

================
File: tailwind.config.ts
================
const {
  default: flattenColorPalette,
} = require("tailwindcss/lib/util/flattenColorPalette");

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  darkMode: "class",
  theme: {
    extend: {
      fontFamily: {
        inter: ["var(--font-inter)"],
        "instrument-serif": ["var(--font-instrument-serif)"],
        "homemade-apple": ["var(--font-homemade-apple)"],
      },
      animation: {
        aurora: "aurora 60s linear infinite",
        scroll: "scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite",
        "meteor-effect": "meteor 5s linear infinite",
      },
      keyframes: {
        aurora: {
          from: {
            backgroundPosition: "50% 50%, 50% 50%",
          },
          to: {
            backgroundPosition: "350% 50%, 350% 50%",
          },
        },
        scroll: {
          to: {
            transform: "translate(calc(-50% - 0.5rem))",
          },
        },
        meteor: {
          "0%": { transform: "rotate(215deg) translateX(0)", opacity: "1" },
          "70%": { opacity: "1" },
          "100%": {
            transform: "rotate(215deg) translateX(-500px)",
            opacity: "0",
          },
        },
      },
      backgroundImage: {
        'noise-pattern': `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 700 700'%3E%3Cdefs%3E%3Cfilter id='nnnoise-filter' x='-20%25' y='-20%25' width='140%25' height='140%25' filterUnits='objectBoundingBox' primitiveUnits='userSpaceOnUse' color-interpolation-filters='linearRGB'%3E%3CfeTurbulence type='turbulence' baseFrequency='0.167' numOctaves='4' seed='15' stitchTiles='stitch' x='0%25' y='0%25' width='100%25' height='100%25' result='turbulence'%3E%3C/feTurbulence%3E%3CfeSpecularLighting surfaceScale='28' specularConstant='0.75' specularExponent='20' lighting-color='%23fff' x='0%25' y='0%25' width='100%25' height='100%25' in='turbulence' result='specularLighting'%3E%3CfeDistantLight azimuth='3' elevation='100'%3E%3C/feDistantLight%3E%3C/feSpecularLighting%3E%3C/filter%3E%3C/defs%3E%3Crect width='700' height='700' fill='%2309090B'%3E%3C/rect%3E%3Crect width='700' height='700' fill='%23ffffff' filter='url(%23nnnoise-filter)'%3E%3C/rect%3E%3C/svg%3E")`,
      },
    },
  },
  plugins: [addVariablesForColors],
};

function addVariablesForColors({ addBase, theme }: any) {
  let allColors = flattenColorPalette(theme("colors"));
  let newVars = Object.fromEntries(
    Object.entries(allColors).map(([key, val]) => [`--${key}`, val])
  );

  addBase({
    ":root": newVars,
  });
}

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
